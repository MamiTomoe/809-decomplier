yuval:
	push rbp
	mov rbp,rsp
	inc A
	mov [rbp-8],rbx
	mov rsp,rbp
	pop rbp
	ret
	
right:
mov A,5
wrong:
mov B,6

checkLoop:
	inc rdx
	loop checkLoop

main:
start
	mov [rbp-4],3
	mov rax,5
	mov DWORD**PTR**[rbp-8],6
	add eax,6
	inc eax
	sub ebx,edx
	push 5
	push 6
	push 7
	cmp eax,7
	je  right
	jmp wrong 
	call yuval
	add rbp,16
	push  eax
	ret
end